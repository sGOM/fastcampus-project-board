<?xml version="1.0"?>
<thlogic>
    <attr sel="#header" th:replace="header :: header"/>
    <attr sel="#footer" th:replace="footer :: footer"/>

    <!-- articles 는 model attribute 로 받은 것 -->
    <attr sel="main" th:object="${articles}">
        <attr sel="#search-type" th:remove="all-but-first">
            <!-- param 은 현재 get parameter, 직전에 검색을 했다면 null 이 아닐 것, 직전에 select 한 항목 -->
            <!-- 직접꺼낸 searchTypes 는 enum 이니까 name 이 존재하는데 param 에서 꺼낸 searchType 은 그렇지 않아서 toString 을 써야함 -->
            <attr sel="option[0]"
                  th:each="searchType : ${searchTypes}"
                  th:value="${searchType.name}"
                  th:text="${searchType.description}"
                  th:selected="${param.searchType != null && (param.searchType.toString == searchType.name)}"
            />
        </attr>
        <!-- 이 역시 직전에 검색했던 검색어 유지 -->
        <attr sel="#search-value" th:value="${param.searchValue}" />

        <attr sel="#article-table">
            <attr sel="thead/tr">
                <!-- .getNumber() 를 thymeleaf 가 .number 로 사용 -->
                <!-- 여기서 * 은 위에서 object 등록한 articles -->
                <!-- href 는 url을 만드는 부분임 -->
                <attr sel="th.title/a" th:text="'제목'" th:href="@{/articles(
                    page=${articles.number},
                    sort='title' + (*{sort.getOrderFor('title')} != null ? (*{sort.getOrderFor('title').direction.name} != 'DESC' ? ',desc' : '') : ''),
                    searchType=${param.searchType},
                    searchValue=${param.searchValue}
                )}"/>
                <attr sel="th.hashtag/a" th:text="'해시태그'" th:href="@{/articles(
                    page=${articles.number},
                    sort='hashtag' + (*{sort.getOrderFor('hashtag')} != null ? (*{sort.getOrderFor('hashtag').direction.name} != 'DESC' ? ',desc' : '') : ''),
                    searchType=${param.searchType},
                    searchValue=${param.searchValue}
                )}"/>
                <!-- ArticleController에서 Page<ArticleResponse>, (DTO)로 응답해주는게 맞지만
                Service Logic을 타고가서 실제로 적용되는 것이 같은 DTO 는 아님
                결국 ArticleRepository.findByUserAccount_UserIdContaining 까지 가는데 해당 값은
                Domain 을 돌려주니 Domain의 Field를 봐야함 -->
                <attr sel="th.user-id/a" th:text="'작성자'" th:href="@{/articles(
                    page=${articles.number},
                    sort='userAccount.userId' + (*{sort.getOrderFor('userAccount.userId')} != null ? (*{sort.getOrderFor('userAccount.userId').direction.name} != 'DESC' ? ',desc' : '') : ''),
                    searchType=${param.searchType},
                    searchValue=${param.searchValue}
                )}"/>
                <attr sel="th.created-at/a" th:text="'작성일'" th:href="@{/articles(
                    page=${articles.number},
                    sort='createdAt' + (*{sort.getOrderFor('createdAt')} != null ? (*{sort.getOrderFor('createdAt').direction.name} != 'DESC' ? ',desc' : '') : ''),
                    searchType=${param.searchType},
                    searchValue=${param.searchValue}
                )}"/>
            </attr>

            <attr sel="tbody" th:remove="all-but-first">
                <attr sel="tr[0]" th:each="article : ${articles}"> <!-- 첫번째 것만 남기고 삭제 -->
                    <!-- text 치환 -->
                    <attr sel="td.title/a" th:text="${article.title}" th:href="@{'/articles/' + ${article.id}}" />
                    <attr sel="td.hashtag" th:text="${article.hashtag}" />
                    <attr sel="td.user-id" th:text="${article.nickname}" />
                    <attr sel="td.created-at/time" th:datetime="${article.createdAt}" th:text="${#temporals.format(article.createdAt, 'yyyy-MM-dd')}" />
                </attr>
            </attr>
        </attr>

        <!-- ' disabled 는 현재 페이지를 가르키는 버튼에 적용' -->
        <attr sel="#pagination">
            <attr sel="li[0]/a"
                  th:text="'previous'"
                  th:href="@{/articles(page=${articles.number - 1}, searchType=${param.searchType}, searchValue=${param.searchValue})}"
                  th:class="'page-link' + (${articles.number} <= 0 ? ' disabled' : '')"
            />
            <!-- 반복 -->
            <attr sel="li[1]" th:class="page-item" th:each="pageNumber : ${paginationBarNumbers}">
                <attr sel="a"
                      th:text="${pageNumber + 1}"
                      th:href="@{/articles(page=${pageNumber}, searchType=${param.searchType}, searchValue=${param.searchValue})}"
                      th:class="'page-link' + (${pageNumber} == ${articles.number} ? ' disabled' : '')"
                />
            </attr>
            <attr sel="li[2]/a"
                  th:text="'next'"
                  th:href="@{/articles(page=${articles.number + 1}, searchType=${param.searchType}, searchValue=${param.searchValue})}"
                  th:class="'page-link' + (${articles.number} >= ${articles.totalPages - 1} ? ' disabled' : '')"
            />
        </attr>
    </attr>
</thlogic>
